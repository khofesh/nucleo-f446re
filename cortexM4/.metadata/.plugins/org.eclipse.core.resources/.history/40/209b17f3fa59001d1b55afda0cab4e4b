/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2022 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
	// enable all configurable exceptions
	// usage fault, mem manage fault and bus fault
	uint32_t *pSHCSR = (uint32_t*)0xE000ED24;

	// enable 18, 17, and 16 bit position
	*pSHCSR |= (1 << 16); // MEMFAULTENA
	*pSHCSR |= (1 << 17); // BUSFAULTENA
	*pSHCSR |= (1 << 18); // USGFAULTENA

	// implement the fault handlers

	// force the processor to execute some undefine instruction

	// analyze the fault

    /* Loop forever */
	for(;;);
}
