/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2022 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stdio.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

void SVC_Handle_c(uint32_t *pBaseStackFrame);
int32_t add_numbers(int32_t x , int32_t y);
int32_t sub_numbers(int32_t x , int32_t y);
int32_t mul_numbers(int32_t x , int32_t y);
int32_t div_numbers(int32_t x , int32_t y);
__attribute__( ( naked ) ) void SVC_Handler();

int main(void)
{
    int32_t res;

    res = add_numbers(40, -90);
    printf("Add result = %ld\n", res);

    res = sub_numbers(25, 150);
    printf("Sub result = %ld\n", res);

    res = mul_numbers(374, 890);
    printf("mul result = %ld\n", res);

    res = div_numbers(67, -3);
    printf("div result = %ld\n", res);
    /* Loop forever */
	for(;;);
}

int32_t add_numbers(int32_t x, int32_t y)
{
    int32_t res;
    __asm volatile("SVC #36");
    __asm volatile("MOV %0,R0"
                   : "=r"(res)::);
    return res;
}

int32_t sub_numbers(int32_t x, int32_t y)
{
    // TODO
}

int32_t mul_numbers(int32_t x, int32_t y)
{

    // TODO
}

int32_t div_numbers(int32_t x, int32_t y)
{
    // TODO
}


