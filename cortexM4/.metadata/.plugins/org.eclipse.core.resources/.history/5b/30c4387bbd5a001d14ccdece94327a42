/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2022 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stdio.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

void SVC_Handler();

int main(void)
{
	// cause svc exception
	__asm volatile("SVC #8");


    /* Loop forever */
	for(;;);
}

__attribute__ ((naked)) void SVC_Handler()
{
	__asm volatile("MRS R0,MSP");
	__asm volatile("B SVC_Handler_c");
}

void SVC_Handler_c(uint32_t *pBaseOfStackFrame)
{
	printf("inside SVC handler\n");

	uint8_t *pReturnAddr = (uint8_t*)pBaseOfStackFrame[6];

	printf("ReturnAddr %lx", pReturnAddr);
}
